<html>
  <head>
    <title>CS307 Color Interpolation</title>
    <style>
      body { margin: 0px; width: 100%; }
      canvas {
          display: block;
          margin: 10px auto;
          width: 80%;
      }
    </style>
    <script src="../libs/three.min.js"></script>
    <script src="../libs/tw.js"></script>
    <script src="../libs/OrbitControls.js"></script>
  </head>
<body>

<script>
var scene = new THREE.Scene();

// construct geometry for a triangle with three different vertex colors
var vertexA = new THREE.Vector3(0, 0, 0);
var colorA = new THREE.Color( THREE.ColorKeywords.red );

var vertexB = new THREE.Vector3(1, 0, 0);
var colorB = new THREE.Color( THREE.ColorKeywords.lime );

var vertexC = new THREE.Vector3(0.5, 1, 0);
var colorC = new THREE.Color( THREE.ColorKeywords.blue );

var triGeom = new THREE.Geometry();
triGeom.vertices = [ vertexA, vertexB, vertexC ];
triGeom.faces = [ new THREE.Face3(0, 1, 2) ];
// set of possible colors for the vertices
triGeom.vertexColors = [ colorA, colorB, colorC ];

triGeom.computeFaceNormals();
// set particular vertexColors for the individual face
TW.computeFaceColors(triGeom);

// create a material that uses the vertex colors to compute face color
var material = new THREE.MeshBasicMaterial( { vertexColors: THREE.VertexColors } );

var mesh = new THREE.Mesh( triGeom, material );

scene.add(mesh);

// ================================================================
var renderer = new THREE.WebGLRenderer();

TW.mainInit(renderer,scene);

TW.cameraSetup(renderer,
               scene,
               {minx: 0, maxx: 1,
                miny: 0, maxy: 1,
                minz: 0, maxz: 0});

TW.viewFromFront();

</script>

</body>
</html>
